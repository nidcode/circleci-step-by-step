version: 2

default: &default
  steps:
    - checkout
    - run: uname -a
    - run: echo "Hello CircleCI!"
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s
    - restore_cache:
        key: spring-demo-{{ .Environment.CACHEKEY }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
          - ~/.m2
        key: spring-demo-{{ .Environment.CACHEKEY }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pom.xml" }}
    - run: 
        command: |
          mvn test -Dtest=$(circleci tests glob "src/test/**/*.java" | circleci tests split --split-by-timings |sed -E 's/^(.*\/)*//' | sed -z 's/\n/,/g')
          mvn package -Dmaven.test.skip
    - store_test_results:
        path: surefire_reports
    - store_artifacts:
        path: demo-SNAPSHOT.jar

jobs:
  jdk-8:
    working_directory: ~/circleci-step-by-step
    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    parallelism: 4
    <<: *default
  jdk-10:
    docker:
      - image: circleci/openjdk:10-jdk-browsers
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    parallelism: 4
    <<: *default
  jdk-11:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    parallelism: 4
    <<: *default
workflows:
  version: 2
  build:
    jobs:
      - "jdk-8"
      - "jdk-10"
      - "jdk-11"
